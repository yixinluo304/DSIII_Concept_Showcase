"0","# UI"
"0","ui <- fluidPage("
"0","  titlePanel(""China Development Finance Projects""),"
"0","  "
"0","  sidebarLayout("
"0","    sidebarPanel(width = 3,"
"0","      selectInput(""region_filter"","
"0","                  ""Filter by Region:"","
"0","                  choices = c(""All"", sort(unique(combined_geojson$`Recipient Region`)))),"
"0","      "
"0","      selectInput(""sector_filter"","
"0","                  ""Filter by Sector:"","
"0","                  choices = c(""All"", sort(unique(combined_geojson$Sector.Name)))),"
"0","      "
"0","      checkboxGroupInput(""status_filter"","
"0","                         ""Project Status:"","
"0","                         choices = sort(unique(combined_geojson$Status))),"
"0","      "
"0","      sliderInput(""amount_filter"","
"0","                  ""Investment Amount (USD Millions):"","
"0","                  min = 0,"
"0","                  max = 10000, # Natural limit for better display"
"0","                  value = c(0, 10000), # Default slider range"
"0","                  step = 1),"
"0","      "
"0","      actionButton(""reset"", ""Reset Filters"", class = ""btn-primary"")"
"0","    ),"
"0","    "
"0","    mainPanel(width = 9,"
"0","      fluidRow("
"0","        column(4, "
"0","               div(class = ""well well-sm"","
"0","                   h4(""Total Projects""),"
"0","                   textOutput(""total_projects""))),"
"0","        column(4, "
"0","               div(class = ""well well-sm"","
"0","                   h4(""Total Investment (USD Billions)""),"
"0","                   textOutput(""total_investment""))),"
"0","        column(4, "
"0","               div(class = ""well well-sm"","
"0","                   h4(""Average Project Size (USD Millions)""),"
"0","                   textOutput(""avg_project"")))"
"0","      ),"
"0","      "
"0","      tabsetPanel("
"0","        tabPanel(""Map View"", leafletOutput(""map"", height = ""600px"")),"
"0","        tabPanel(""Analysis"","
"0","                 fluidRow("
"0","                   column(6, plotlyOutput(""sector_plot"")),"
"0","                   column(6, plotlyOutput(""status_plot""))"
"0","                 ),"
"0","                 plotlyOutput(""regional_plot"")),"
"0","        tabPanel(""Data Table"", DTOutput(""project_table""))"
"0","      )"
"0","    )"
"0","  )"
"0",")"
"0",""
"0","# Server"
"0","server <- function(input, output, session) {"
"0","  "
"0","  # Reset button functionality"
"0","  observeEvent(input$reset, {"
"0","    updateSelectInput(session, ""region_filter"", selected = ""All"")"
"0","    updateSelectInput(session, ""sector_filter"", selected = ""All"")"
"0","    updateCheckboxGroupInput(session, ""status_filter"", selected = character(0))"
"0","    updateSliderInput(session, ""amount_filter"", "
"0","                      min = 0,"
"0","                      max = 10000, # Reset to default limits"
"0","                      value = c(0, 10000))"
"0","  })"
"0","  "
"0","  # Reactive data based on filters"
"0","  filtered_data <- reactive({"
"0","    data <- combined_geojson"
"0","    "
"0","    if (input$region_filter != ""All"") {"
"0","      data <- data %>% filter(`Recipient Region` == input$region_filter)"
"0","    }"
"0","    if (input$sector_filter != ""All"") {"
"0","      data <- data %>% filter(Sector.Name == input$sector_filter)"
"0","    }"
"0","    if (length(input$status_filter) > 0) {"
"0","      data <- data %>% filter(Status %in% input$status_filter)"
"0","    }"
"0","    data <- data %>%"
"0","      filter(Amount..Constant.USD.2021./1e6 >= input$amount_filter[1],"
"0","             Amount..Constant.USD.2021./1e6 <= input$amount_filter[2])"
"0","    "
"0","    validate("
"0","      need(nrow(data) > 0, ""No projects match the selected filters"")"
"0","    )"
"0","    data"
"0","  })"
"0","  "
"0","  # Map"
"0","  output$map <- renderLeaflet({"
"0","    req(filtered_data())"
"0","    pal <- colorFactor(palette = ""viridis"", domain = unique(filtered_data()$Sector.Name))"
"0","    leaflet(filtered_data()) %>%"
"0","      addProviderTiles(""CartoDB.Positron"") %>%"
"0","      addPolygons("
"0","        fillColor = ~pal(Sector.Name),"
"0","        color = ~pal(Sector.Name),"
"0","        weight = 2,"
"0","        opacity = 1,"
"0","        fillOpacity = 0.7,"
"0","        highlightOptions = highlightOptions("
"0","          weight = 3,"
"0","          color = ""white"","
"0","          fillOpacity = 1,"
"0","          bringToFront = TRUE"
"0","        ),"
"0","        popup = ~paste0("
"0","          ""<strong>Title:</strong> "", Title, ""<br>"","
"0","          ""<strong>Amount:</strong> $"", formatC(Amount..Constant.USD.2021./1e6, format = ""f"", digits = 1, big.mark = "",""), ""M<br>"","
"0","          ""<strong>Status:</strong> "", Status, ""<br>"","
"0","          ""<strong>Sector:</strong> "", Sector.Name"
"0","        )"
"0","      ) %>%"
"0","      addLegend("
"0","        position = ""bottomright"","
"0","        pal = pal,"
"0","        values = ~Sector.Name,"
"0","        title = ""Sectors"","
"0","        opacity = 1"
"0","      )"
"0","  })"
"0","  "
"0","  # Sector plot"
"0","  output$sector_plot <- renderPlotly({"
"0","    sector_data <- filtered_data() %>%"
"0","      st_drop_geometry() %>%"
"0","      group_by(Sector.Name) %>%"
"0","      summarise(Total = sum(Amount..Constant.USD.2021./1e6, na.rm = TRUE)) %>%"
"0","      arrange(desc(Total))"
"0","    "
"0","    plot_ly("
"0","      data = sector_data,"
"0","      x = ~Total,"
"0","      y = ~reorder(Sector.Name, Total),"
"0","      type = 'bar',"
"0","      orientation = 'h',"
"0","      marker = list(color = ""blue"")"
"0","    ) %>%"
"0","      layout("
"0","        title = ""Top Sectors by Investment"","
"0","        xaxis = list(title = ""Investment (USD Millions)""),"
"0","        yaxis = list(title = """"),"
"0","        showlegend = FALSE"
"0","      )"
"0","  })"
"0","  "
"0","  # Status plot"
"0","  output$status_plot <- renderPlotly({"
"0","    status_data <- filtered_data() %>%"
"0","      st_drop_geometry() %>%"
"0","      group_by(Status) %>%"
"0","      summarise(Count = n()) %>%"
"0","      mutate(Percentage = Count/sum(Count) * 100)"
"0","    "
"0","    plot_ly("
"0","      data = status_data,"
"0","      labels = ~Status,"
"0","      values = ~Count,"
"0","      type = ""pie"","
"0","      textinfo = ""label+percent"","
"0","      marker = list(colors = c(""#2ecc71"", ""#3498db"", ""#e74c3c""))"
"0","    ) %>%"
"0","      layout("
"0","        title = ""Project Status Distribution"","
"0","        showlegend = TRUE"
"0","      )"
"0","  })"
"0","  "
"0","  # Regional Distribution Plot"
"0","  output$regional_plot <- renderPlotly({"
"0","    regional_data <- filtered_data() %>%"
"0","      st_drop_geometry() %>%"
"0","      group_by(`Recipient Region`, Sector.Name) %>%"
"0","      summarise(TotalInvestment = sum(Amount..Constant.USD.2021., na.rm = TRUE)) %>%"
"0","      arrange(desc(TotalInvestment))"
"0","    "
"0","    plot_ly("
"0","      data = regional_data,"
"0","      x = ~`Recipient Region`,"
"0","      y = ~TotalInvestment / 1e6,"
"0","      type = 'bar',"
"0","      color = ~Sector.Name,"
"0","      colors = viridis::viridis_pal(option = ""D"")(length(unique(regional_data$Sector.Name))),"
"0","      text = ~paste("
"0","        ""Region:"", `Recipient Region`, ""<br>"","
"0","        ""Sector:"", Sector.Name, ""<br>"","
"0","        ""Investment:"", scales::comma(TotalInvestment / 1e6, suffix = ""M"")"
"0","      ),"
"0","      hoverinfo = ""text"""
"0","    ) %>%"
"0","      layout("
"0","        title = ""Regional Distribution of Investments by Sector"","
"0","        xaxis = list(title = ""Region""),"
"0","        yaxis = list(title = ""Investment (USD Millions)""),"
"0","        barmode = ""stack"","
"0","        font = list(size = 12) # Improved font size for clarity"
"0","      )"
"0","  })"
"0","  "
"0","  # Summary statistics"
"0","  output$total_projects <- renderText({"
"0","    nrow(filtered_data())"
"0","  })"
"0","  "
"0","  output$total_investment <- renderText({"
"0","    total <- sum(filtered_data()$Amount..Constant.USD.2021., na.rm = TRUE) / 1e9"
"0","    paste0(""$"", formatC(total, format = ""f"", digits = 1, big.mark = "",""), ""B"")"
"0","  })"
"0","  "
"0","  output$avg_project <- renderText({"
"0","    avg <- mean(filtered_data()$Amount..Constant.USD.2021., na.rm = TRUE) / 1e6"
"0","    paste0(""$"", formatC(avg, format = ""f"", digits = 1, big.mark = "",""), ""M"")"
"0","  })"
"0","  "
"0","  # Data table"
"0","  output$project_table <- renderDT({"
"0","    filtered_data() %>%"
"0","      st_drop_geometry() %>%"
"0","      datatable(options = list(pageLength = 10), rownames = FALSE)"
"0","  })"
"0","}"
"0",""
"0","# Run the Shiny app"
"0","shinyApp(ui = ui, server = server)"
"2","
Listening on http://127.0.0.1:7272
"
